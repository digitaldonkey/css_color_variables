<?php

/**
 * Implements hook_page_attachments_alter().
 */
function css_color_variables_page_attachments_alter(array &$page) {
  // Add css color variables.
  if (\Drupal::moduleHandler()->moduleExists('color')) {
    $theme = \Drupal::service('theme.manager')->getActiveTheme();
    /* @var $conf \Drupal\Core\Config\ImmutableConfig */
    $conf = Drupal::config('color.theme.' . $theme->getName());
    $colors = color_get_palette($theme->getName());
    if ($colors) {
      $page['#attached']['html_head'][] = [
        [
          '#tag' => 'style',
          '#value' => css_color_variables_create_css_vars($colors),
        ],
        $theme->getName(),
      ];

      if (isset($page['#cache']['tags'])) {
        $page['#cache']['tags'] = array_merge(
          $page['#cache']['tags'],
          $conf->getCacheTags(),
          ['config.system.theme']
        );
      }
      else {
        $page['#cache']['tags'] = array_merge(
          $conf->getCacheTags(),
          ['config.system.theme'],
        );

      }

    }
  }
}

/**
 * Color palette as root css variables.
 *
 * @param array $palette
 *   Drupal color module palette.
 *
 * @return string
 *   CSS code.
 */
function css_color_variables_create_css_vars(array $palette) : string {
  $css = [];
  $css[] = ':root {';
  foreach ($palette as $color => $value) {
    $css[] = '  --' . str_replace('_', '-', $color) . ': ' . $value . ';';
  }
  $css[] = '}';
  return implode(PHP_EOL, $css);
}
